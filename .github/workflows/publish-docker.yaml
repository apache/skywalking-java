# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: publish-docker

on:
  push:
    branches:
      - main

env:
  SKIP_TEST: true
  HUB: ghcr.io/apache/skywalking-java

jobs:
  build:
    if: github.repository == 'apache/skywalking-java'
    name: Build and Push Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 60
    strategy:
      matrix:
        java-version: [ 8, 9, 10, 11, 12, 13, 14, 15, 16 ]
    env:
      BASE_IMAGE: adoptopenjdk/openjdk${{ matrix.java-version }}:alpine
      NAME: jdk-${{ matrix.java-version }}
      TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-publish-docker-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-publish-docker-
      - name: Log in to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.HUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        run: |
          make docker.push || make docker.push
          docker tag $HUB/$NAME:$TAG $HUB/$NAME:latest
          docker push $HUB/$NAME:latest

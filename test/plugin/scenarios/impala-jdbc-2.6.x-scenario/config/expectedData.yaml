# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
segmentItems:
  - serviceName: impala-jdbc-2.6.x-scenario
    segmentSize: ge 1
    segments:
    - segmentId: not null
      spans:
      - operationName: Impala/JDBC/Statement/execute
        parentSpanId: 0
        spanId: 1
        spanLayer: Database
        startTime: nq 0
        endTime: nq 0
        componentId: 133
        isError: false
        spanType: Exit
        peer: impala-server:21050
        skipAnalysis: 'false'
        tags:
          - {key: db.type, value: Impala}
          - { key: db.instance, value: '' }
          - key: db.statement
            value: "CREATE TABLE IF NOT EXISTS default.impala_test (test_id BIGINT, test_name STRING);"
      - operationName: Impala/JDBC/Statement/execute
        parentSpanId: 0
        spanId: 2
        spanLayer: Database
        startTime: nq 0
        endTime: nq 0
        componentId: 133
        isError: false
        spanType: Exit
        peer: impala-server:21050
        skipAnalysis: 'false'
        tags:
        - {key: db.type, value: Impala}
        - { key: db.instance, value: '' }
        - key: db.statement
          value: "INSERT INTO impala_test VALUES (123, 'test');"
      - operationName: Impala/JDBC/PreparedStatement/executeQuery
        parentSpanId: 0
        spanId: 3
        spanLayer: Database
        startTime: nq 0
        endTime: nq 0
        componentId: 133
        isError: false
        spanType: Exit
        peer: impala-server:21050
        skipAnalysis: 'false'
        tags:
          - {key: db.type, value: Impala}
          - { key: db.instance, value: '' }
          - key: db.statement
            value: "SELECT COUNT(*) FROM impala_test;"
      - operationName: Impala/JDBC/PreparedStatement/executeQuery
        parentSpanId: 0
        spanId: 4
        spanLayer: Database
        startTime: nq 0
        endTime: nq 0
        componentId: 133
        isError: false
        spanType: Exit
        peer: impala-server:21050
        skipAnalysis: 'false'
        tags:
          - {key: db.type, value: Impala}
          - { key: db.instance, value: '' }
          - key: db.statement
            value: 'SELECT COUNT(*) FROM impala_test WHERE test_id = ?;'
          - { key: db.sql.parameters, value: '[123]'}
      - operationName: Impala/JDBC/Connection/close
        parentSpanId: 0
        spanId: 5
        spanLayer: Database
        startTime: nq 0
        endTime: nq 0
        componentId: 133
        isError: false
        spanType: Exit
        peer: impala-server:21050
        skipAnalysis: 'false'
        tags:
          - {key: db.type, value: Impala}
          - { key: db.instance, value: '' }
          - { key: db.statement, value: '' }
      - operationName: HEAD:/impala-jdbc-2.6.x-scenario/case/healthCheck
        parentSpanId: -1
        spanId: 0
        startTime: nq 0
        endTime: nq 0
        spanLayer: Http
        isError: false
        spanType: Entry
        peer: ''
        componentId: 1
        tags:
        - { key: url, value: 'http://localhost:8080/impala-jdbc-2.6.x-scenario/case/healthCheck' }
        - { key: http.method, value: HEAD }
        - { key: http.status_code, value: '200' }
        logs: [ ]
        skipAnalysis: 'false'

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
segmentItems:
  - serviceName: spring-kafka-1.3.x-scenario
    segmentSize: nq 0
    segments:
      - segmentId: not null
        spans:
          - operationName: Kafka/spring_test/Producer
            parentSpanId: 0
            spanId: 1
            spanLayer: MQ
            startTime: not null
            endTime: not null
            componentId: 40
            isError: false
            spanType: Exit
            peer: kafka-server:9092
            skipAnalysis: false
            tags:
              - {key: mq.broker, value: 'kafka-server:9092'}
              - {key: mq.topic, value: spring_test}
          - operationName: GET:/case/spring-kafka-case
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 14
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/spring-kafka-1.3.x-scenario/case/spring-kafka-case'}
              - {key: http.method, value: GET}
              - {key: http.status_code, value: '200'}
      - segmentId: not null
        spans:
          - operationName: GET:/case/spring-kafka-consumer-ping
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 14
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/spring-kafka-1.3.x-scenario/case/spring-kafka-consumer-ping'}
              - {key: http.method, value: GET}
              - {key: http.status_code, value: '200'}
            refs:
              - {parentEndpoint: 'Kafka/spring_test/Consumer/grop:spring_test', networkAddress: 'localhost:8080',
                 refType: CrossProcess, parentSpanId: 1, parentTraceSegmentId: not null,
                 parentServiceInstance: not null, parentService: spring-kafka-1.3.x-scenario,
                 traceId: not null}
      - segmentId: not null
        spans:
          - operationName: /spring-kafka-1.3.x-scenario/case/spring-kafka-consumer-ping
            parentSpanId: 0
            spanId: 1
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 12
            isError: false
            spanType: Exit
            peer: localhost:8080
            skipAnalysis: false
            tags:
              - {key: http.method, value: GET}
              - {key: url, value: 'http://localhost:8080/spring-kafka-1.3.x-scenario/case/spring-kafka-consumer-ping'}
              - {key: http.status_code, value: '200'}
          - operationName: Kafka/spring_test/Consumer/grop:spring_test
            parentSpanId: -1
            spanId: 0
            spanLayer: MQ
            startTime: not null
            endTime: not null
            componentId: 41
            isError: false
            spanType: Entry
            peer: kafka-server:9092
            skipAnalysis: false
            tags:
              - {key: mq.broker, value: 'kafka-server:9092'}
              - {key: mq.topic, value: spring_test}
              - {key: transmission.latency, value: not null}
            refs:
              - {parentEndpoint: GET:/case/spring-kafka-case, networkAddress: 'kafka-server:9092',
                 refType: CrossProcess, parentSpanId: not null, parentTraceSegmentId: not null,
                 parentServiceInstance: not null, parentService: spring-kafka-1.3.x-scenario,
                 traceId: not null}
